// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by google-apis-code-generator 1.5.1
//     C# generator version: 1.42.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/**
 * \brief
 *   Firebase Management API Version v1beta1
 *
 * \section ApiInfo API Version Information
 *    <table>
 *      <tr><th>API
 *          <td><a href='https://firebase.google.com'>Firebase Management API</a>
 *      <tr><th>API Version<td>v1beta1
 *      <tr><th>API Rev<td>20191126 (1790)
 *      <tr><th>API Docs
 *          <td><a href='https://firebase.google.com'>
 *              https://firebase.google.com</a>
 *      <tr><th>Discovery Name<td>firebase
 *    </table>
 *
 * \section ForMoreInfo For More Information
 *
 * The complete API documentation for using Firebase Management API can be found at
 * <a href='https://firebase.google.com'>https://firebase.google.com</a>.
 *
 * For more information about the Google APIs Client Library for .NET, see
 * <a href='https://developers.google.com/api-client-library/dotnet/get_started'>
 * https://developers.google.com/api-client-library/dotnet/get_started</a>
 */

namespace Google.Apis.FirebaseManagement.v1beta1
{
    /// <summary>The FirebaseManagement Service.</summary>
    public class FirebaseManagementService : Google.Apis.Services.BaseClientService
    {
        /// <summary>The API version.</summary>
        public const string Version = "v1beta1";

        /// <summary>The discovery version used to generate this service.</summary>
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed =
            Google.Apis.Discovery.DiscoveryVersion.Version_1_0;

        /// <summary>Constructs a new service.</summary>
        public FirebaseManagementService() :
            this(new Google.Apis.Services.BaseClientService.Initializer()) {}

        /// <summary>Constructs a new service.</summary>
        /// <param name="initializer">The service initializer.</param>
        public FirebaseManagementService(Google.Apis.Services.BaseClientService.Initializer initializer)
            : base(initializer)
        {
            availableProjects = new AvailableProjectsResource(this);
            operations = new OperationsResource(this);
            projects = new ProjectsResource(this);
        }

        /// <summary>Gets the service supported features.</summary>
        public override System.Collections.Generic.IList<string> Features
        {
            get { return new string[0]; }
        }

        /// <summary>Gets the service name.</summary>
        public override string Name
        {
            get { return "firebase"; }
        }

        /// <summary>Gets the service base URI.</summary>
        public override string BaseUri
        {
        #if NETSTANDARD1_3 || NETSTANDARD2_0 || NET45
            get { return BaseUriOverride ?? "https://firebase.googleapis.com/"; }
        #else
            get { return "https://firebase.googleapis.com/"; }
        #endif
        }

        /// <summary>Gets the service base path.</summary>
        public override string BasePath
        {
            get { return ""; }
        }

        #if !NET40
        /// <summary>Gets the batch base URI; <c>null</c> if unspecified.</summary>
        public override string BatchUri
        {
            get { return "https://firebase.googleapis.com/batch"; }
        }

        /// <summary>Gets the batch base path; <c>null</c> if unspecified.</summary>
        public override string BatchPath
        {
            get { return "batch"; }
        }
        #endif

        /// <summary>Available OAuth 2.0 scopes for use with the Firebase Management API.</summary>
        public class Scope
        {
            /// <summary>View and manage your data across Google Cloud Platform services</summary>
            public static string CloudPlatform = "https://www.googleapis.com/auth/cloud-platform";

            /// <summary>View your data across Google Cloud Platform services</summary>
            public static string CloudPlatformReadOnly = "https://www.googleapis.com/auth/cloud-platform.read-only";

            /// <summary>View and administer all your Firebase data and settings</summary>
            public static string Firebase = "https://www.googleapis.com/auth/firebase";

            /// <summary>View all your Firebase data and settings</summary>
            public static string FirebaseReadonly = "https://www.googleapis.com/auth/firebase.readonly";

        }

        /// <summary>Available OAuth 2.0 scope constants for use with the Firebase Management API.</summary>
        public static class ScopeConstants
        {
            /// <summary>View and manage your data across Google Cloud Platform services</summary>
            public const string CloudPlatform = "https://www.googleapis.com/auth/cloud-platform";

            /// <summary>View your data across Google Cloud Platform services</summary>
            public const string CloudPlatformReadOnly = "https://www.googleapis.com/auth/cloud-platform.read-only";

            /// <summary>View and administer all your Firebase data and settings</summary>
            public const string Firebase = "https://www.googleapis.com/auth/firebase";

            /// <summary>View all your Firebase data and settings</summary>
            public const string FirebaseReadonly = "https://www.googleapis.com/auth/firebase.readonly";

        }



        private readonly AvailableProjectsResource availableProjects;

        /// <summary>Gets the AvailableProjects resource.</summary>
        public virtual AvailableProjectsResource AvailableProjects
        {
            get { return availableProjects; }
        }

        private readonly OperationsResource operations;

        /// <summary>Gets the Operations resource.</summary>
        public virtual OperationsResource Operations
        {
            get { return operations; }
        }

        private readonly ProjectsResource projects;

        /// <summary>Gets the Projects resource.</summary>
        public virtual ProjectsResource Projects
        {
            get { return projects; }
        }
    }

    ///<summary>A base abstract class for FirebaseManagement requests.</summary>
    public abstract class FirebaseManagementBaseServiceRequest<TResponse> : Google.Apis.Requests.ClientServiceRequest<TResponse>
    {
        ///<summary>Constructs a new FirebaseManagementBaseServiceRequest instance.</summary>
        protected FirebaseManagementBaseServiceRequest(Google.Apis.Services.IClientService service)
            : base(service)
        {
        }

        /// <summary>V1 error format.</summary>
        [Google.Apis.Util.RequestParameterAttribute("$.xgafv", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<XgafvEnum> Xgafv { get; set; }

        /// <summary>V1 error format.</summary>
        public enum XgafvEnum
        {
            /// <summary>v1 error format</summary>
            [Google.Apis.Util.StringValueAttribute("1")]
            Value1,
            /// <summary>v2 error format</summary>
            [Google.Apis.Util.StringValueAttribute("2")]
            Value2,
        }

        /// <summary>OAuth access token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("access_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string AccessToken { get; set; }

        /// <summary>Data format for response.</summary>
        /// [default: json]
        [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<AltEnum> Alt { get; set; }

        /// <summary>Data format for response.</summary>
        public enum AltEnum
        {
            /// <summary>Responses with Content-Type of application/json</summary>
            [Google.Apis.Util.StringValueAttribute("json")]
            Json,
            /// <summary>Media download with context-dependent Content-Type</summary>
            [Google.Apis.Util.StringValueAttribute("media")]
            Media,
            /// <summary>Responses with Content-Type of application/x-protobuf</summary>
            [Google.Apis.Util.StringValueAttribute("proto")]
            Proto,
        }

        /// <summary>JSONP</summary>
        [Google.Apis.Util.RequestParameterAttribute("callback", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Callback { get; set; }

        /// <summary>Selector specifying which fields to include in a partial response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Fields { get; set; }

        /// <summary>API key. Your API key identifies your project and provides you with API access, quota, and reports.
        /// Required unless you provide an OAuth 2.0 token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Key { get; set; }

        /// <summary>OAuth 2.0 token for the current user.</summary>
        [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string OauthToken { get; set; }

        /// <summary>Returns response with indentations and line breaks.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> PrettyPrint { get; set; }

        /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string
        /// assigned to a user, but should not exceed 40 characters.</summary>
        [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string QuotaUser { get; set; }

        /// <summary>Legacy upload protocol for media (e.g. "media", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("uploadType", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadType { get; set; }

        /// <summary>Upload protocol for media (e.g. "raw", "multipart").</summary>
        [Google.Apis.Util.RequestParameterAttribute("upload_protocol", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UploadProtocol { get; set; }

        /// <summary>Initializes FirebaseManagement parameter list.</summary>
        protected override void InitParameters()
        {
            base.InitParameters();

            RequestParameters.Add(
                "$.xgafv", new Google.Apis.Discovery.Parameter
                {
                    Name = "$.xgafv",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "access_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "access_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "alt", new Google.Apis.Discovery.Parameter
                {
                    Name = "alt",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "json",
                    Pattern = null,
                });
            RequestParameters.Add(
                "callback", new Google.Apis.Discovery.Parameter
                {
                    Name = "callback",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "fields", new Google.Apis.Discovery.Parameter
                {
                    Name = "fields",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "key", new Google.Apis.Discovery.Parameter
                {
                    Name = "key",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "oauth_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "oauth_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "prettyPrint", new Google.Apis.Discovery.Parameter
                {
                    Name = "prettyPrint",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "quotaUser", new Google.Apis.Discovery.Parameter
                {
                    Name = "quotaUser",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "uploadType", new Google.Apis.Discovery.Parameter
                {
                    Name = "uploadType",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "upload_protocol", new Google.Apis.Discovery.Parameter
                {
                    Name = "upload_protocol",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
        }
    }

    /// <summary>The "availableProjects" collection of methods.</summary>
    public class AvailableProjectsResource
    {
        private const string Resource = "availableProjects";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public AvailableProjectsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Returns a list of [Google Cloud Platform (GCP) `Projects`] (https://cloud.google.com/resource-
        /// manager/reference/rest/v1/projects) that are available to have Firebase resources added to them.
        ///
        /// A GCP `Project` will only be returned if:
        ///
        /// The caller has sufficient [Google IAM](https://cloud.google.com/iam) permissions to call AddFirebase. The
        /// GCP `Project` is not already a FirebaseProject. The GCP `Project` is not in an Organization which has
        /// policies that prevent Firebase resources from being added. </summary>
        public virtual ListRequest List()
        {
            return new ListRequest(service);
        }

        /// <summary>Returns a list of [Google Cloud Platform (GCP) `Projects`] (https://cloud.google.com/resource-
        /// manager/reference/rest/v1/projects) that are available to have Firebase resources added to them.
        ///
        /// A GCP `Project` will only be returned if:
        ///
        /// The caller has sufficient [Google IAM](https://cloud.google.com/iam) permissions to call AddFirebase. The
        /// GCP `Project` is not already a FirebaseProject. The GCP `Project` is not in an Organization which has
        /// policies that prevent Firebase resources from being added. </summary>
        public class ListRequest : FirebaseManagementBaseServiceRequest<Google.Apis.FirebaseManagement.v1beta1.Data.ListAvailableProjectsResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }


            /// <summary>Token returned from a previous call to `ListAvailableProjects` indicating where in the set of
            /// GCP `Projects` to resume listing.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>The maximum number of GCP `Projects` to return in the response.
            ///
            /// The server may return fewer than this value at its discretion. If no value is specified (or too large a
            /// value is specified), the server will impose its own limit.
            ///
            /// This value cannot be negative.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> PageSize { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1beta1/availableProjects"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageSize", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageSize",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "operations" collection of methods.</summary>
    public class OperationsResource
    {
        private const string Resource = "operations";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public OperationsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }


        /// <summary>Gets the latest state of a long-running operation.  Clients can use this method to poll the
        /// operation result at intervals as recommended by the API service.</summary>
        /// <param name="name">The name of the operation resource.</param>
        public virtual GetRequest Get(string name)
        {
            return new GetRequest(service, name);
        }

        /// <summary>Gets the latest state of a long-running operation.  Clients can use this method to poll the
        /// operation result at intervals as recommended by the API service.</summary>
        public class GetRequest : FirebaseManagementBaseServiceRequest<Google.Apis.FirebaseManagement.v1beta1.Data.Operation>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string name)
                : base(service)
            {
                Name = name;
                InitParameters();
            }


            /// <summary>The name of the operation resource.</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Name { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1beta1/{+name}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^operations/.+$",
                    });
            }

        }
    }

    /// <summary>The "projects" collection of methods.</summary>
    public class ProjectsResource
    {
        private const string Resource = "projects";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ProjectsResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;
            androidApps = new AndroidAppsResource(service);
            availableLocations = new AvailableLocationsResource(service);
            defaultLocation = new DefaultLocationResource(service);
            iosApps = new IosAppsResource(service);
            webApps = new WebAppsResource(service);

        }

        private readonly AndroidAppsResource androidApps;

        /// <summary>Gets the AndroidApps resource.</summary>
        public virtual AndroidAppsResource AndroidApps
        {
            get { return androidApps; }
        }

        /// <summary>The "androidApps" collection of methods.</summary>
        public class AndroidAppsResource
        {
            private const string Resource = "androidApps";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public AndroidAppsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;
                sha = new ShaResource(service);

            }

            private readonly ShaResource sha;

            /// <summary>Gets the Sha resource.</summary>
            public virtual ShaResource Sha
            {
                get { return sha; }
            }

            /// <summary>The "sha" collection of methods.</summary>
            public class ShaResource
            {
                private const string Resource = "sha";

                /// <summary>The service which this resource belongs to.</summary>
                private readonly Google.Apis.Services.IClientService service;

                /// <summary>Constructs a new resource.</summary>
                public ShaResource(Google.Apis.Services.IClientService service)
                {
                    this.service = service;

                }


                /// <summary>Adds a SHA certificate to the specified AndroidApp.</summary>
                /// <param name="body">The body of the request.</param>
                /// <param name="parent">The parent App to which a SHA certificate will be added, in the format:
                /// projects/projectId/androidApps/appId As an appId is a unique identifier, the Unique Resource from Sub-Collection
                /// access pattern may be used here, in the format: projects/-/androidApps/appId</param>
                public virtual CreateRequest Create(Google.Apis.FirebaseManagement.v1beta1.Data.ShaCertificate body, string parent)
                {
                    return new CreateRequest(service, body, parent);
                }

                /// <summary>Adds a SHA certificate to the specified AndroidApp.</summary>
                public class CreateRequest : FirebaseManagementBaseServiceRequest<Google.Apis.FirebaseManagement.v1beta1.Data.ShaCertificate>
                {
                    /// <summary>Constructs a new Create request.</summary>
                    public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.FirebaseManagement.v1beta1.Data.ShaCertificate body, string parent)
                        : base(service)
                    {
                        Parent = parent;
                        Body = body;
                        InitParameters();
                    }


                    /// <summary>The parent App to which a SHA certificate will be added, in the format:
                    /// projects/projectId/androidApps/appId As an appId is a unique identifier, the Unique Resource
                    /// from Sub-Collection access pattern may be used here, in the format:
                    /// projects/-/androidApps/appId</summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }


                    /// <summary>Gets or sets the body of this request.</summary>
                    Google.Apis.FirebaseManagement.v1beta1.Data.ShaCertificate Body { get; set; }

                    ///<summary>Returns the body of the request.</summary>
                    protected override object GetBody() { return Body; }

                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "create"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "POST"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v1beta1/{+parent}/sha"; }
                    }

                    /// <summary>Initializes Create parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/androidApps/[^/]+$",
                            });
                    }

                }

                /// <summary>Removes a SHA certificate from the specified AndroidApp.</summary>
                /// <param name="name">The fully qualified resource name of the `sha-key`, in the format:
                /// projects/projectId/androidApps/appId/sha/shaId You can obtain the full name from the response of
                /// [`ListShaCertificates`](../projects.androidApps.sha/list) or the original
                /// [`CreateShaCertificate`](../projects.androidApps.sha/create).</param>
                public virtual DeleteRequest Delete(string name)
                {
                    return new DeleteRequest(service, name);
                }

                /// <summary>Removes a SHA certificate from the specified AndroidApp.</summary>
                public class DeleteRequest : FirebaseManagementBaseServiceRequest<Google.Apis.FirebaseManagement.v1beta1.Data.Empty>
                {
                    /// <summary>Constructs a new Delete request.</summary>
                    public DeleteRequest(Google.Apis.Services.IClientService service, string name)
                        : base(service)
                    {
                        Name = name;
                        InitParameters();
                    }


                    /// <summary>The fully qualified resource name of the `sha-key`, in the format:
                    /// projects/projectId/androidApps/appId/sha/shaId You can obtain the full name from the response of
                    /// [`ListShaCertificates`](../projects.androidApps.sha/list) or the original
                    /// [`CreateShaCertificate`](../projects.androidApps.sha/create).</summary>
                    [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Name { get; private set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "delete"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "DELETE"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v1beta1/{+name}"; }
                    }

                    /// <summary>Initializes Delete parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "name", new Google.Apis.Discovery.Parameter
                            {
                                Name = "name",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/androidApps/[^/]+/sha/[^/]+$",
                            });
                    }

                }

                /// <summary>Returns the list of SHA-1 and SHA-256 certificates for the specified AndroidApp.</summary>
                /// <param name="parent">The parent App for which to list SHA certificates, in the format:
                /// projects/projectId/androidApps/appId As an appId is a unique identifier, the Unique Resource from Sub-Collection
                /// access pattern may be used here, in the format: projects/-/androidApps/appId</param>
                public virtual ListRequest List(string parent)
                {
                    return new ListRequest(service, parent);
                }

                /// <summary>Returns the list of SHA-1 and SHA-256 certificates for the specified AndroidApp.</summary>
                public class ListRequest : FirebaseManagementBaseServiceRequest<Google.Apis.FirebaseManagement.v1beta1.Data.ListShaCertificatesResponse>
                {
                    /// <summary>Constructs a new List request.</summary>
                    public ListRequest(Google.Apis.Services.IClientService service, string parent)
                        : base(service)
                    {
                        Parent = parent;
                        InitParameters();
                    }


                    /// <summary>The parent App for which to list SHA certificates, in the format:
                    /// projects/projectId/androidApps/appId As an appId is a unique identifier, the Unique Resource
                    /// from Sub-Collection access pattern may be used here, in the format:
                    /// projects/-/androidApps/appId</summary>
                    [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                    public virtual string Parent { get; private set; }


                    ///<summary>Gets the method name.</summary>
                    public override string MethodName
                    {
                        get { return "list"; }
                    }

                    ///<summary>Gets the HTTP method.</summary>
                    public override string HttpMethod
                    {
                        get { return "GET"; }
                    }

                    ///<summary>Gets the REST path.</summary>
                    public override string RestPath
                    {
                        get { return "v1beta1/{+parent}/sha"; }
                    }

                    /// <summary>Initializes List parameter list.</summary>
                    protected override void InitParameters()
                    {
                        base.InitParameters();

                        RequestParameters.Add(
                            "parent", new Google.Apis.Discovery.Parameter
                            {
                                Name = "parent",
                                IsRequired = true,
                                ParameterType = "path",
                                DefaultValue = null,
                                Pattern = @"^projects/[^/]+/androidApps/[^/]+$",
                            });
                    }

                }
            }

            /// <summary>Requests that a new AndroidApp be created.
            ///
            /// The result of this call is an `Operation` which can be used to track the provisioning process. The
            /// `Operation` is automatically deleted after completion, so there is no need to call
            /// `DeleteOperation`.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="parent">The parent Project for which to list Apps, in the format: projects/projectId</param>
            public virtual CreateRequest Create(Google.Apis.FirebaseManagement.v1beta1.Data.AndroidApp body, string parent)
            {
                return new CreateRequest(service, body, parent);
            }

            /// <summary>Requests that a new AndroidApp be created.
            ///
            /// The result of this call is an `Operation` which can be used to track the provisioning process. The
            /// `Operation` is automatically deleted after completion, so there is no need to call
            /// `DeleteOperation`.</summary>
            public class CreateRequest : FirebaseManagementBaseServiceRequest<Google.Apis.FirebaseManagement.v1beta1.Data.Operation>
            {
                /// <summary>Constructs a new Create request.</summary>
                public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.FirebaseManagement.v1beta1.Data.AndroidApp body, string parent)
                    : base(service)
                {
                    Parent = parent;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The parent Project for which to list Apps, in the format: projects/projectId</summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.FirebaseManagement.v1beta1.Data.AndroidApp Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "create"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1beta1/{+parent}/androidApps"; }
                }

                /// <summary>Initializes Create parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+$",
                        });
                }

            }

            /// <summary>Gets the AndroidApp identified by the specified resource name.</summary>
            /// <param name="name">The fully qualified resource name of the App, in the format: projects/projectId/androidApps/appId
            /// As an appId is a unique identifier, the Unique Resource from Sub-Collection access pattern may be used here, in the
            /// format: projects/-/androidApps/appId</param>
            public virtual GetRequest Get(string name)
            {
                return new GetRequest(service, name);
            }

            /// <summary>Gets the AndroidApp identified by the specified resource name.</summary>
            public class GetRequest : FirebaseManagementBaseServiceRequest<Google.Apis.FirebaseManagement.v1beta1.Data.AndroidApp>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, string name)
                    : base(service)
                {
                    Name = name;
                    InitParameters();
                }


                /// <summary>The fully qualified resource name of the App, in the format:
                /// projects/projectId/androidApps/appId As an appId is a unique identifier, the Unique Resource from
                /// Sub-Collection access pattern may be used here, in the format:
                /// projects/-/androidApps/appId</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "get"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1beta1/{+name}"; }
                }

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/androidApps/[^/]+$",
                        });
                }

            }

            /// <summary>Gets the configuration artifact associated with the specified AndroidApp.</summary>
            /// <param name="name">The resource name of the App configuration to download, in the format:
            /// projects/projectId/androidApps/appId/config As an appId is a unique identifier, the Unique Resource from Sub-
            /// Collection access pattern may be used here, in the format: projects/-/androidApps/appId</param>
            public virtual GetConfigRequest GetConfig(string name)
            {
                return new GetConfigRequest(service, name);
            }

            /// <summary>Gets the configuration artifact associated with the specified AndroidApp.</summary>
            public class GetConfigRequest : FirebaseManagementBaseServiceRequest<Google.Apis.FirebaseManagement.v1beta1.Data.AndroidAppConfig>
            {
                /// <summary>Constructs a new GetConfig request.</summary>
                public GetConfigRequest(Google.Apis.Services.IClientService service, string name)
                    : base(service)
                {
                    Name = name;
                    InitParameters();
                }


                /// <summary>The resource name of the App configuration to download, in the format:
                /// projects/projectId/androidApps/appId/config As an appId is a unique identifier, the Unique Resource
                /// from Sub-Collection access pattern may be used here, in the format:
                /// projects/-/androidApps/appId</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "getConfig"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1beta1/{+name}"; }
                }

                /// <summary>Initializes GetConfig parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/androidApps/[^/]+/config$",
                        });
                }

            }

            /// <summary>Lists each AndroidApp associated with the specified parent Project.
            ///
            /// The elements are returned in no particular order, but will be a consistent view of the Apps when
            /// additional requests are made with a `pageToken`.</summary>
            /// <param name="parent">The parent Project for which to list Apps, in the format: projects/projectId</param>
            public virtual ListRequest List(string parent)
            {
                return new ListRequest(service, parent);
            }

            /// <summary>Lists each AndroidApp associated with the specified parent Project.
            ///
            /// The elements are returned in no particular order, but will be a consistent view of the Apps when
            /// additional requests are made with a `pageToken`.</summary>
            public class ListRequest : FirebaseManagementBaseServiceRequest<Google.Apis.FirebaseManagement.v1beta1.Data.ListAndroidAppsResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string parent)
                    : base(service)
                {
                    Parent = parent;
                    InitParameters();
                }


                /// <summary>The parent Project for which to list Apps, in the format: projects/projectId</summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>Token returned from a previous call to `ListAndroidApps` indicating where in the set of
                /// Apps to resume listing.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }

                /// <summary>The maximum number of Apps to return in the response.
                ///
                /// The server may return fewer than this at its discretion. If no value is specified (or too large a
                /// value is specified), then the server will impose its own limit.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1beta1/{+parent}/androidApps"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+$",
                        });
                    RequestParameters.Add(
                        "pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Updates the attributes of the AndroidApp identified by the specified resource name.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">The fully qualified resource name of the App, in the format:
            /// projects/projectId/androidApps/appId</param>
            public virtual PatchRequest Patch(Google.Apis.FirebaseManagement.v1beta1.Data.AndroidApp body, string name)
            {
                return new PatchRequest(service, body, name);
            }

            /// <summary>Updates the attributes of the AndroidApp identified by the specified resource name.</summary>
            public class PatchRequest : FirebaseManagementBaseServiceRequest<Google.Apis.FirebaseManagement.v1beta1.Data.AndroidApp>
            {
                /// <summary>Constructs a new Patch request.</summary>
                public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.FirebaseManagement.v1beta1.Data.AndroidApp body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The fully qualified resource name of the App, in the format:
                /// projects/projectId/androidApps/appId</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>Specifies which fields to update. Note that the fields `name`, `appId`, `projectId`, and
                /// `packageName` are all immutable.</summary>
                [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                public virtual object UpdateMask { get; set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.FirebaseManagement.v1beta1.Data.AndroidApp Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "patch"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "PATCH"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1beta1/{+name}"; }
                }

                /// <summary>Initializes Patch parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/androidApps/[^/]+$",
                        });
                    RequestParameters.Add(
                        "updateMask", new Google.Apis.Discovery.Parameter
                        {
                            Name = "updateMask",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }
        private readonly AvailableLocationsResource availableLocations;

        /// <summary>Gets the AvailableLocations resource.</summary>
        public virtual AvailableLocationsResource AvailableLocations
        {
            get { return availableLocations; }
        }

        /// <summary>The "availableLocations" collection of methods.</summary>
        public class AvailableLocationsResource
        {
            private const string Resource = "availableLocations";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public AvailableLocationsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Returns a list of valid Google Cloud Platform (GCP) resource locations for the specified
            /// Project (including a FirebaseProject).
            ///
            /// One of these locations can be selected as the Project's [_default_ GCP resource
            /// location](https://firebase.google.com/docs/projects/locations), which is the geographical location where
            /// project resources, such as Cloud Firestore, will be provisioned by default. However, if the default GCP
            /// resource location has already been set for the Project, then this setting cannot be changed.
            ///
            /// This call checks for any location restrictions for the specified Project and, thus, might return a
            /// subset of all possible GCP resource locations. To list all GCP resource locations (regardless of any
            /// restrictions), call the endpoint without specifying a `projectId` (that is,
            /// `/v1beta1/{parent=projects/-}/listAvailableLocations`).
            ///
            /// To call `ListAvailableLocations` with a specified project, a member must be at minimum a Viewer of the
            /// project. Calls without a specified project do not require any specific project permissions.</summary>
            /// <param name="parent">The Project for which to list GCP resource locations, in the format: projects/projectId If no
            /// project is specified (that is, `projects/-`), the returned list does not take into account org-specific or project-
            /// specific location restrictions.</param>
            public virtual ListRequest List(string parent)
            {
                return new ListRequest(service, parent);
            }

            /// <summary>Returns a list of valid Google Cloud Platform (GCP) resource locations for the specified
            /// Project (including a FirebaseProject).
            ///
            /// One of these locations can be selected as the Project's [_default_ GCP resource
            /// location](https://firebase.google.com/docs/projects/locations), which is the geographical location where
            /// project resources, such as Cloud Firestore, will be provisioned by default. However, if the default GCP
            /// resource location has already been set for the Project, then this setting cannot be changed.
            ///
            /// This call checks for any location restrictions for the specified Project and, thus, might return a
            /// subset of all possible GCP resource locations. To list all GCP resource locations (regardless of any
            /// restrictions), call the endpoint without specifying a `projectId` (that is,
            /// `/v1beta1/{parent=projects/-}/listAvailableLocations`).
            ///
            /// To call `ListAvailableLocations` with a specified project, a member must be at minimum a Viewer of the
            /// project. Calls without a specified project do not require any specific project permissions.</summary>
            public class ListRequest : FirebaseManagementBaseServiceRequest<Google.Apis.FirebaseManagement.v1beta1.Data.ListAvailableLocationsResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string parent)
                    : base(service)
                {
                    Parent = parent;
                    InitParameters();
                }


                /// <summary>The Project for which to list GCP resource locations, in the format: projects/projectId If
                /// no project is specified (that is, `projects/-`), the returned list does not take into account org-
                /// specific or project-specific location restrictions.</summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>Token returned from a previous call to `ListAvailableLocations` indicating where in the
                /// list of locations to resume listing.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }

                /// <summary>The maximum number of locations to return in the response.
                ///
                /// The server may return fewer than this value at its discretion. If no value is specified (or too
                /// large a value is specified), then the server will impose its own limit.
                ///
                /// This value cannot be negative.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1beta1/{+parent}/availableLocations"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+$",
                        });
                    RequestParameters.Add(
                        "pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }
        private readonly DefaultLocationResource defaultLocation;

        /// <summary>Gets the DefaultLocation resource.</summary>
        public virtual DefaultLocationResource DefaultLocation
        {
            get { return defaultLocation; }
        }

        /// <summary>The "defaultLocation" collection of methods.</summary>
        public class DefaultLocationResource
        {
            private const string Resource = "defaultLocation";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public DefaultLocationResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Sets the default Google Cloud Platform (GCP) resource location for the specified
            /// FirebaseProject.
            ///
            /// This method creates an App Engine application with a [default Cloud Storage
            /// bucket](https://cloud.google.com/appengine/docs/standard/python/googlecloudstorageclient/setting-up-
            /// cloud-storage#activating_a_cloud_storage_bucket), located in the specified
            /// [`location_id`](#body.request_body.FIELDS.location_id). This location must be one of the available [GCP
            /// resource locations](https://firebase.google.com/docs/projects/locations). After the default GCP resource
            /// location is finalized, or if it was already set, it cannot be changed. The default GCP resource location
            /// for the specified FirebaseProject might already be set because either the GCP `Project` already has an
            /// App Engine application or `FinalizeDefaultLocation` was previously called with a specified
            /// `location_id`. Any new calls to `FinalizeDefaultLocation` with a different specified `location_id` will
            /// return a 409 error.
            ///
            /// The result of this call is an [`Operation`](../../v1beta1/operations), which can be used to track the
            /// provisioning process. The [`response`](../../v1beta1/operations#Operation.FIELDS.response) type of the
            /// `Operation` is google.protobuf.Empty.
            ///
            /// The `Operation` can be polled by its `name` using GetOperation until `done` is true. When `done` is
            /// true, the `Operation` has either succeeded or failed. If the `Operation` has succeeded, its
            /// [`response`](../../v1beta1/operations#Operation.FIELDS.response) will be set to a google.protobuf.Empty;
            /// if the `Operation` has failed, its `error` will be set to a google.rpc.Status. The `Operation` is
            /// automatically deleted after completion, so there is no need to call DeleteOperation.
            ///
            /// All fields listed in the [request body](#request-body) are required.
            ///
            /// To call `FinalizeDefaultLocation`, a member must be an Owner of the project.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="parent">The resource name of the Project for which the default GCP resource location will be set, in
            /// the format: projects/projectId</param>
            public virtual FinalizeRequest Finalize(Google.Apis.FirebaseManagement.v1beta1.Data.FinalizeDefaultLocationRequest body, string parent)
            {
                return new FinalizeRequest(service, body, parent);
            }

            /// <summary>Sets the default Google Cloud Platform (GCP) resource location for the specified
            /// FirebaseProject.
            ///
            /// This method creates an App Engine application with a [default Cloud Storage
            /// bucket](https://cloud.google.com/appengine/docs/standard/python/googlecloudstorageclient/setting-up-
            /// cloud-storage#activating_a_cloud_storage_bucket), located in the specified
            /// [`location_id`](#body.request_body.FIELDS.location_id). This location must be one of the available [GCP
            /// resource locations](https://firebase.google.com/docs/projects/locations). After the default GCP resource
            /// location is finalized, or if it was already set, it cannot be changed. The default GCP resource location
            /// for the specified FirebaseProject might already be set because either the GCP `Project` already has an
            /// App Engine application or `FinalizeDefaultLocation` was previously called with a specified
            /// `location_id`. Any new calls to `FinalizeDefaultLocation` with a different specified `location_id` will
            /// return a 409 error.
            ///
            /// The result of this call is an [`Operation`](../../v1beta1/operations), which can be used to track the
            /// provisioning process. The [`response`](../../v1beta1/operations#Operation.FIELDS.response) type of the
            /// `Operation` is google.protobuf.Empty.
            ///
            /// The `Operation` can be polled by its `name` using GetOperation until `done` is true. When `done` is
            /// true, the `Operation` has either succeeded or failed. If the `Operation` has succeeded, its
            /// [`response`](../../v1beta1/operations#Operation.FIELDS.response) will be set to a google.protobuf.Empty;
            /// if the `Operation` has failed, its `error` will be set to a google.rpc.Status. The `Operation` is
            /// automatically deleted after completion, so there is no need to call DeleteOperation.
            ///
            /// All fields listed in the [request body](#request-body) are required.
            ///
            /// To call `FinalizeDefaultLocation`, a member must be an Owner of the project.</summary>
            public class FinalizeRequest : FirebaseManagementBaseServiceRequest<Google.Apis.FirebaseManagement.v1beta1.Data.Operation>
            {
                /// <summary>Constructs a new Finalize request.</summary>
                public FinalizeRequest(Google.Apis.Services.IClientService service, Google.Apis.FirebaseManagement.v1beta1.Data.FinalizeDefaultLocationRequest body, string parent)
                    : base(service)
                {
                    Parent = parent;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The resource name of the Project for which the default GCP resource location will be set,
                /// in the format: projects/projectId</summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.FirebaseManagement.v1beta1.Data.FinalizeDefaultLocationRequest Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "finalize"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1beta1/{+parent}/defaultLocation:finalize"; }
                }

                /// <summary>Initializes Finalize parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+$",
                        });
                }

            }
        }
        private readonly IosAppsResource iosApps;

        /// <summary>Gets the IosApps resource.</summary>
        public virtual IosAppsResource IosApps
        {
            get { return iosApps; }
        }

        /// <summary>The "iosApps" collection of methods.</summary>
        public class IosAppsResource
        {
            private const string Resource = "iosApps";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public IosAppsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Requests that a new IosApp be created.
            ///
            /// The result of this call is an `Operation` which can be used to track the provisioning process. The
            /// `Operation` is automatically deleted after completion, so there is no need to call
            /// `DeleteOperation`.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="parent">The parent Project for which to list Apps, in the format: projects/projectId</param>
            public virtual CreateRequest Create(Google.Apis.FirebaseManagement.v1beta1.Data.IosApp body, string parent)
            {
                return new CreateRequest(service, body, parent);
            }

            /// <summary>Requests that a new IosApp be created.
            ///
            /// The result of this call is an `Operation` which can be used to track the provisioning process. The
            /// `Operation` is automatically deleted after completion, so there is no need to call
            /// `DeleteOperation`.</summary>
            public class CreateRequest : FirebaseManagementBaseServiceRequest<Google.Apis.FirebaseManagement.v1beta1.Data.Operation>
            {
                /// <summary>Constructs a new Create request.</summary>
                public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.FirebaseManagement.v1beta1.Data.IosApp body, string parent)
                    : base(service)
                {
                    Parent = parent;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The parent Project for which to list Apps, in the format: projects/projectId</summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.FirebaseManagement.v1beta1.Data.IosApp Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "create"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1beta1/{+parent}/iosApps"; }
                }

                /// <summary>Initializes Create parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+$",
                        });
                }

            }

            /// <summary>Gets the IosApp identified by the specified resource name.</summary>
            /// <param name="name">The fully qualified resource name of the App, in the format: projects/projectId/iosApps/appId As
            /// an appId is a unique identifier, the Unique Resource from Sub-Collection access pattern may be used here, in the
            /// format: projects/-/iosApps/appId</param>
            public virtual GetRequest Get(string name)
            {
                return new GetRequest(service, name);
            }

            /// <summary>Gets the IosApp identified by the specified resource name.</summary>
            public class GetRequest : FirebaseManagementBaseServiceRequest<Google.Apis.FirebaseManagement.v1beta1.Data.IosApp>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, string name)
                    : base(service)
                {
                    Name = name;
                    InitParameters();
                }


                /// <summary>The fully qualified resource name of the App, in the format:
                /// projects/projectId/iosApps/appId As an appId is a unique identifier, the Unique Resource from Sub-
                /// Collection access pattern may be used here, in the format: projects/-/iosApps/appId</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "get"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1beta1/{+name}"; }
                }

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/iosApps/[^/]+$",
                        });
                }

            }

            /// <summary>Gets the configuration artifact associated with the specified IosApp.</summary>
            /// <param name="name">The resource name of the App configuration to download, in the format:
            /// projects/projectId/iosApps/appId/config As an appId is a unique identifier, the Unique Resource from Sub-Collection
            /// access pattern may be used here, in the format: projects/-/iosApps/appId</param>
            public virtual GetConfigRequest GetConfig(string name)
            {
                return new GetConfigRequest(service, name);
            }

            /// <summary>Gets the configuration artifact associated with the specified IosApp.</summary>
            public class GetConfigRequest : FirebaseManagementBaseServiceRequest<Google.Apis.FirebaseManagement.v1beta1.Data.IosAppConfig>
            {
                /// <summary>Constructs a new GetConfig request.</summary>
                public GetConfigRequest(Google.Apis.Services.IClientService service, string name)
                    : base(service)
                {
                    Name = name;
                    InitParameters();
                }


                /// <summary>The resource name of the App configuration to download, in the format:
                /// projects/projectId/iosApps/appId/config As an appId is a unique identifier, the Unique Resource from
                /// Sub-Collection access pattern may be used here, in the format: projects/-/iosApps/appId</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "getConfig"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1beta1/{+name}"; }
                }

                /// <summary>Initializes GetConfig parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/iosApps/[^/]+/config$",
                        });
                }

            }

            /// <summary>Lists each IosApp associated with the specified parent Project.
            ///
            /// The elements are returned in no particular order, but will be a consistent view of the Apps when
            /// additional requests are made with a `pageToken`.</summary>
            /// <param name="parent">The parent Project for which to list Apps, in the format: projects/projectId</param>
            public virtual ListRequest List(string parent)
            {
                return new ListRequest(service, parent);
            }

            /// <summary>Lists each IosApp associated with the specified parent Project.
            ///
            /// The elements are returned in no particular order, but will be a consistent view of the Apps when
            /// additional requests are made with a `pageToken`.</summary>
            public class ListRequest : FirebaseManagementBaseServiceRequest<Google.Apis.FirebaseManagement.v1beta1.Data.ListIosAppsResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string parent)
                    : base(service)
                {
                    Parent = parent;
                    InitParameters();
                }


                /// <summary>The parent Project for which to list Apps, in the format: projects/projectId</summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>Token returned from a previous call to `ListIosApps` indicating where in the set of Apps to
                /// resume listing.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }

                /// <summary>The maximum number of Apps to return in the response.
                ///
                /// The server may return fewer than this at its discretion. If no value is specified (or too large a
                /// value is specified), the server will impose its own limit.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1beta1/{+parent}/iosApps"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+$",
                        });
                    RequestParameters.Add(
                        "pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Updates the attributes of the IosApp identified by the specified resource name.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">The fully qualified resource name of the App, in the format:
            /// projects/projectId/iosApps/appId</param>
            public virtual PatchRequest Patch(Google.Apis.FirebaseManagement.v1beta1.Data.IosApp body, string name)
            {
                return new PatchRequest(service, body, name);
            }

            /// <summary>Updates the attributes of the IosApp identified by the specified resource name.</summary>
            public class PatchRequest : FirebaseManagementBaseServiceRequest<Google.Apis.FirebaseManagement.v1beta1.Data.IosApp>
            {
                /// <summary>Constructs a new Patch request.</summary>
                public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.FirebaseManagement.v1beta1.Data.IosApp body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The fully qualified resource name of the App, in the format:
                /// projects/projectId/iosApps/appId</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>Specifies which fields to update. Note that the fields `name`, `appId`, `projectId`, and
                /// `bundleId` are all immutable.</summary>
                [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                public virtual object UpdateMask { get; set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.FirebaseManagement.v1beta1.Data.IosApp Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "patch"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "PATCH"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1beta1/{+name}"; }
                }

                /// <summary>Initializes Patch parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/iosApps/[^/]+$",
                        });
                    RequestParameters.Add(
                        "updateMask", new Google.Apis.Discovery.Parameter
                        {
                            Name = "updateMask",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }
        private readonly WebAppsResource webApps;

        /// <summary>Gets the WebApps resource.</summary>
        public virtual WebAppsResource WebApps
        {
            get { return webApps; }
        }

        /// <summary>The "webApps" collection of methods.</summary>
        public class WebAppsResource
        {
            private const string Resource = "webApps";

            /// <summary>The service which this resource belongs to.</summary>
            private readonly Google.Apis.Services.IClientService service;

            /// <summary>Constructs a new resource.</summary>
            public WebAppsResource(Google.Apis.Services.IClientService service)
            {
                this.service = service;

            }


            /// <summary>Requests that a new WebApp be created.
            ///
            /// The result of this call is an `Operation` which can be used to track the provisioning process. The
            /// `Operation` is automatically deleted after completion, so there is no need to call
            /// `DeleteOperation`.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="parent">The parent Project for which to list Apps, in the format: projects/projectId</param>
            public virtual CreateRequest Create(Google.Apis.FirebaseManagement.v1beta1.Data.WebApp body, string parent)
            {
                return new CreateRequest(service, body, parent);
            }

            /// <summary>Requests that a new WebApp be created.
            ///
            /// The result of this call is an `Operation` which can be used to track the provisioning process. The
            /// `Operation` is automatically deleted after completion, so there is no need to call
            /// `DeleteOperation`.</summary>
            public class CreateRequest : FirebaseManagementBaseServiceRequest<Google.Apis.FirebaseManagement.v1beta1.Data.Operation>
            {
                /// <summary>Constructs a new Create request.</summary>
                public CreateRequest(Google.Apis.Services.IClientService service, Google.Apis.FirebaseManagement.v1beta1.Data.WebApp body, string parent)
                    : base(service)
                {
                    Parent = parent;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The parent Project for which to list Apps, in the format: projects/projectId</summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.FirebaseManagement.v1beta1.Data.WebApp Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "create"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "POST"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1beta1/{+parent}/webApps"; }
                }

                /// <summary>Initializes Create parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+$",
                        });
                }

            }

            /// <summary>Gets the WebApp identified by the specified resource name.</summary>
            /// <param name="name">The fully qualified resource name of the App, in the format: projects/projectId/webApps/appId As
            /// an appId is a unique identifier, the Unique Resource from Sub-Collection access pattern may be used here, in the
            /// format: projects/-/webApps/appId</param>
            public virtual GetRequest Get(string name)
            {
                return new GetRequest(service, name);
            }

            /// <summary>Gets the WebApp identified by the specified resource name.</summary>
            public class GetRequest : FirebaseManagementBaseServiceRequest<Google.Apis.FirebaseManagement.v1beta1.Data.WebApp>
            {
                /// <summary>Constructs a new Get request.</summary>
                public GetRequest(Google.Apis.Services.IClientService service, string name)
                    : base(service)
                {
                    Name = name;
                    InitParameters();
                }


                /// <summary>The fully qualified resource name of the App, in the format:
                /// projects/projectId/webApps/appId As an appId is a unique identifier, the Unique Resource from Sub-
                /// Collection access pattern may be used here, in the format: projects/-/webApps/appId</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "get"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1beta1/{+name}"; }
                }

                /// <summary>Initializes Get parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/webApps/[^/]+$",
                        });
                }

            }

            /// <summary>Gets the configuration artifact associated with the specified WebApp.</summary>
            /// <param name="name">The resource name of the App configuration to download, in the format:
            /// projects/projectId/webApps/appId/config As an appId is a unique identifier, the Unique Resource from Sub-Collection
            /// access pattern may be used here, in the format: projects/-/webApps/appId</param>
            public virtual GetConfigRequest GetConfig(string name)
            {
                return new GetConfigRequest(service, name);
            }

            /// <summary>Gets the configuration artifact associated with the specified WebApp.</summary>
            public class GetConfigRequest : FirebaseManagementBaseServiceRequest<Google.Apis.FirebaseManagement.v1beta1.Data.WebAppConfig>
            {
                /// <summary>Constructs a new GetConfig request.</summary>
                public GetConfigRequest(Google.Apis.Services.IClientService service, string name)
                    : base(service)
                {
                    Name = name;
                    InitParameters();
                }


                /// <summary>The resource name of the App configuration to download, in the format:
                /// projects/projectId/webApps/appId/config As an appId is a unique identifier, the Unique Resource from
                /// Sub-Collection access pattern may be used here, in the format: projects/-/webApps/appId</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "getConfig"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1beta1/{+name}"; }
                }

                /// <summary>Initializes GetConfig parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/webApps/[^/]+/config$",
                        });
                }

            }

            /// <summary>Lists each WebApp associated with the specified parent Project.
            ///
            /// The elements are returned in no particular order, but will be a consistent view of the Apps when
            /// additional requests are made with a `pageToken`.</summary>
            /// <param name="parent">The parent Project for which to list Apps, in the format: projects/projectId</param>
            public virtual ListRequest List(string parent)
            {
                return new ListRequest(service, parent);
            }

            /// <summary>Lists each WebApp associated with the specified parent Project.
            ///
            /// The elements are returned in no particular order, but will be a consistent view of the Apps when
            /// additional requests are made with a `pageToken`.</summary>
            public class ListRequest : FirebaseManagementBaseServiceRequest<Google.Apis.FirebaseManagement.v1beta1.Data.ListWebAppsResponse>
            {
                /// <summary>Constructs a new List request.</summary>
                public ListRequest(Google.Apis.Services.IClientService service, string parent)
                    : base(service)
                {
                    Parent = parent;
                    InitParameters();
                }


                /// <summary>The parent Project for which to list Apps, in the format: projects/projectId</summary>
                [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Parent { get; private set; }

                /// <summary>Token returned from a previous call to `ListWebApps` indicating where in the set of Apps to
                /// resume listing.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
                public virtual string PageToken { get; set; }

                /// <summary>The maximum number of Apps to return in the response.
                ///
                /// The server may return fewer than this value at its discretion. If no value is specified (or too
                /// large a value is specified), then the server will impose its own limit.</summary>
                [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
                public virtual System.Nullable<int> PageSize { get; set; }


                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "list"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "GET"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1beta1/{+parent}/webApps"; }
                }

                /// <summary>Initializes List parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "parent", new Google.Apis.Discovery.Parameter
                        {
                            Name = "parent",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+$",
                        });
                    RequestParameters.Add(
                        "pageToken", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageToken",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                    RequestParameters.Add(
                        "pageSize", new Google.Apis.Discovery.Parameter
                        {
                            Name = "pageSize",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }

            /// <summary>Updates the attributes of the WebApp identified by the specified resource name.</summary>
            /// <param name="body">The body of the request.</param>
            /// <param name="name">The fully qualified resource name of the App, for example:
            /// projects/projectId/webApps/appId</param>
            public virtual PatchRequest Patch(Google.Apis.FirebaseManagement.v1beta1.Data.WebApp body, string name)
            {
                return new PatchRequest(service, body, name);
            }

            /// <summary>Updates the attributes of the WebApp identified by the specified resource name.</summary>
            public class PatchRequest : FirebaseManagementBaseServiceRequest<Google.Apis.FirebaseManagement.v1beta1.Data.WebApp>
            {
                /// <summary>Constructs a new Patch request.</summary>
                public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.FirebaseManagement.v1beta1.Data.WebApp body, string name)
                    : base(service)
                {
                    Name = name;
                    Body = body;
                    InitParameters();
                }


                /// <summary>The fully qualified resource name of the App, for example:
                /// projects/projectId/webApps/appId</summary>
                [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
                public virtual string Name { get; private set; }

                /// <summary>Specifies which fields to update. Note that the fields `name`, `appId`, and `projectId` are
                /// all immutable.</summary>
                [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
                public virtual object UpdateMask { get; set; }


                /// <summary>Gets or sets the body of this request.</summary>
                Google.Apis.FirebaseManagement.v1beta1.Data.WebApp Body { get; set; }

                ///<summary>Returns the body of the request.</summary>
                protected override object GetBody() { return Body; }

                ///<summary>Gets the method name.</summary>
                public override string MethodName
                {
                    get { return "patch"; }
                }

                ///<summary>Gets the HTTP method.</summary>
                public override string HttpMethod
                {
                    get { return "PATCH"; }
                }

                ///<summary>Gets the REST path.</summary>
                public override string RestPath
                {
                    get { return "v1beta1/{+name}"; }
                }

                /// <summary>Initializes Patch parameter list.</summary>
                protected override void InitParameters()
                {
                    base.InitParameters();

                    RequestParameters.Add(
                        "name", new Google.Apis.Discovery.Parameter
                        {
                            Name = "name",
                            IsRequired = true,
                            ParameterType = "path",
                            DefaultValue = null,
                            Pattern = @"^projects/[^/]+/webApps/[^/]+$",
                        });
                    RequestParameters.Add(
                        "updateMask", new Google.Apis.Discovery.Parameter
                        {
                            Name = "updateMask",
                            IsRequired = false,
                            ParameterType = "query",
                            DefaultValue = null,
                            Pattern = null,
                        });
                }

            }
        }

        /// <summary>Adds Firebase resources to the specified existing [Google Cloud Platform (GCP) `Project`]
        /// (https://cloud.google.com/resource-manager/reference/rest/v1/projects).
        ///
        /// Since a FirebaseProject is actually also a GCP `Project`, a `FirebaseProject` uses underlying GCP
        /// identifiers (most importantly, the `projectId`) as its own for easy interop with GCP APIs.
        ///
        /// The result of this call is an [`Operation`](../../v1beta1/operations). Poll the `Operation` to track the
        /// provisioning process by calling GetOperation until [`done`](../../v1beta1/operations#Operation.FIELDS.done)
        /// is `true`. When `done` is `true`, the `Operation` has either succeeded or failed. If the `Operation`
        /// succeeded, its [`response`](../../v1beta1/operations#Operation.FIELDS.response) is set to a FirebaseProject;
        /// if the `Operation` failed, its [`error`](../../v1beta1/operations#Operation.FIELDS.error) is set to a
        /// google.rpc.Status. The `Operation` is automatically deleted after completion, so there is no need to call
        /// DeleteOperation.
        ///
        /// This method does not modify any billing account information on the underlying GCP `Project`.
        ///
        /// To call `AddFirebase`, a member must be an Editor or Owner for the existing GCP `Project`. Service accounts
        /// cannot call `AddFirebase`.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="project">The resource name of the GCP `Project` to which Firebase resources will be added, in the
        /// format: projects/projectId After calling `AddFirebase`, the [`projectId`](https://cloud.google.com/resource-
        /// manager/reference/rest/v1/projects#Project.FIELDS.project_id) of the GCP `Project` is also the `projectId` of the
        /// FirebaseProject.</param>
        public virtual AddFirebaseRequest AddFirebase(Google.Apis.FirebaseManagement.v1beta1.Data.AddFirebaseRequest body, string project)
        {
            return new AddFirebaseRequest(service, body, project);
        }

        /// <summary>Adds Firebase resources to the specified existing [Google Cloud Platform (GCP) `Project`]
        /// (https://cloud.google.com/resource-manager/reference/rest/v1/projects).
        ///
        /// Since a FirebaseProject is actually also a GCP `Project`, a `FirebaseProject` uses underlying GCP
        /// identifiers (most importantly, the `projectId`) as its own for easy interop with GCP APIs.
        ///
        /// The result of this call is an [`Operation`](../../v1beta1/operations). Poll the `Operation` to track the
        /// provisioning process by calling GetOperation until [`done`](../../v1beta1/operations#Operation.FIELDS.done)
        /// is `true`. When `done` is `true`, the `Operation` has either succeeded or failed. If the `Operation`
        /// succeeded, its [`response`](../../v1beta1/operations#Operation.FIELDS.response) is set to a FirebaseProject;
        /// if the `Operation` failed, its [`error`](../../v1beta1/operations#Operation.FIELDS.error) is set to a
        /// google.rpc.Status. The `Operation` is automatically deleted after completion, so there is no need to call
        /// DeleteOperation.
        ///
        /// This method does not modify any billing account information on the underlying GCP `Project`.
        ///
        /// To call `AddFirebase`, a member must be an Editor or Owner for the existing GCP `Project`. Service accounts
        /// cannot call `AddFirebase`.</summary>
        public class AddFirebaseRequest : FirebaseManagementBaseServiceRequest<Google.Apis.FirebaseManagement.v1beta1.Data.Operation>
        {
            /// <summary>Constructs a new AddFirebase request.</summary>
            public AddFirebaseRequest(Google.Apis.Services.IClientService service, Google.Apis.FirebaseManagement.v1beta1.Data.AddFirebaseRequest body, string project)
                : base(service)
            {
                Project = project;
                Body = body;
                InitParameters();
            }


            /// <summary>The resource name of the GCP `Project` to which Firebase resources will be added, in the
            /// format: projects/projectId After calling `AddFirebase`, the [`projectId`](https://cloud.google.com
            /// /resource-manager/reference/rest/v1/projects#Project.FIELDS.project_id) of the GCP `Project` is also the
            /// `projectId` of the FirebaseProject.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.FirebaseManagement.v1beta1.Data.AddFirebaseRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "addFirebase"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1beta1/{+project}:addFirebase"; }
            }

            /// <summary>Initializes AddFirebase parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "project", new Google.Apis.Discovery.Parameter
                    {
                        Name = "project",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+$",
                    });
            }

        }

        /// <summary>Links a FirebaseProject with an existing [Google Analytics
        /// account](http://www.google.com/analytics/).
        ///
        /// Using this call, you can either:
        ///
        /// Specify an `analyticsAccountId` to provision a new Google Analytics property within the specified account
        /// and associate the new property with your `FirebaseProject`. Specify an existing `analyticsPropertyId` to
        /// associate the property with your `FirebaseProject`.
        ///
        /// Note that when you call `AddGoogleAnalytics`:
        ///
        /// The first check determines if any existing data streams in the Google Analytics property correspond to any
        /// existing Firebase Apps in your `FirebaseProject` (based on the `packageName` or `bundleId` associated with
        /// the data stream). Then, as applicable, the data streams and apps are linked. Note that this auto-linking
        /// only applies to Android Apps and iOS Apps. If no corresponding data streams are found for your Firebase
        /// Apps, new data streams are provisioned in the Google Analytics property for each of your Firebase Apps. Note
        /// that a new data stream is always provisioned for a Web App even if it was previously associated with a data
        /// stream in your Analytics property.
        ///
        /// Learn more about the hierarchy and structure of Google Analytics accounts in the [Analytics
        /// documentation](https://support.google.com/analytics/answer/9303323).
        ///
        /// The result of this call is an [`Operation`](../../v1beta1/operations). Poll the `Operation` to track the
        /// provisioning process by calling GetOperation until [`done`](../../v1beta1/operations#Operation.FIELDS.done)
        /// is `true`. When `done` is `true`, the `Operation` has either succeeded or failed. If the `Operation`
        /// succeeded, its [`response`](../../v1beta1/operations#Operation.FIELDS.response) is set to an
        /// AnalyticsDetails; if the `Operation` failed, its [`error`](../../v1beta1/operations#Operation.FIELDS.error)
        /// is set to a google.rpc.Status.
        ///
        /// To call `AddGoogleAnalytics`, a member must be an Owner for the existing `FirebaseProject` and have the
        /// [`Edit` permission](https://support.google.com/analytics/answer/2884495) for the Google Analytics account.
        ///
        /// If a `FirebaseProject` already has Google Analytics enabled, and you call `AddGoogleAnalytics` using an
        /// `analyticsPropertyId` that's different from the currently associated property, then the call will fail.
        /// Analytics may have already been enabled in the Firebase console or by specifying `timeZone` and `regionCode`
        /// in the call to [`AddFirebase`](../../v1beta1/projects/addFirebase).</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="parent">The parent `FirebaseProject` to link to an existing Google Analytics account, in the format:
        /// projects/projectId</param>
        public virtual AddGoogleAnalyticsRequest AddGoogleAnalytics(Google.Apis.FirebaseManagement.v1beta1.Data.AddGoogleAnalyticsRequest body, string parent)
        {
            return new AddGoogleAnalyticsRequest(service, body, parent);
        }

        /// <summary>Links a FirebaseProject with an existing [Google Analytics
        /// account](http://www.google.com/analytics/).
        ///
        /// Using this call, you can either:
        ///
        /// Specify an `analyticsAccountId` to provision a new Google Analytics property within the specified account
        /// and associate the new property with your `FirebaseProject`. Specify an existing `analyticsPropertyId` to
        /// associate the property with your `FirebaseProject`.
        ///
        /// Note that when you call `AddGoogleAnalytics`:
        ///
        /// The first check determines if any existing data streams in the Google Analytics property correspond to any
        /// existing Firebase Apps in your `FirebaseProject` (based on the `packageName` or `bundleId` associated with
        /// the data stream). Then, as applicable, the data streams and apps are linked. Note that this auto-linking
        /// only applies to Android Apps and iOS Apps. If no corresponding data streams are found for your Firebase
        /// Apps, new data streams are provisioned in the Google Analytics property for each of your Firebase Apps. Note
        /// that a new data stream is always provisioned for a Web App even if it was previously associated with a data
        /// stream in your Analytics property.
        ///
        /// Learn more about the hierarchy and structure of Google Analytics accounts in the [Analytics
        /// documentation](https://support.google.com/analytics/answer/9303323).
        ///
        /// The result of this call is an [`Operation`](../../v1beta1/operations). Poll the `Operation` to track the
        /// provisioning process by calling GetOperation until [`done`](../../v1beta1/operations#Operation.FIELDS.done)
        /// is `true`. When `done` is `true`, the `Operation` has either succeeded or failed. If the `Operation`
        /// succeeded, its [`response`](../../v1beta1/operations#Operation.FIELDS.response) is set to an
        /// AnalyticsDetails; if the `Operation` failed, its [`error`](../../v1beta1/operations#Operation.FIELDS.error)
        /// is set to a google.rpc.Status.
        ///
        /// To call `AddGoogleAnalytics`, a member must be an Owner for the existing `FirebaseProject` and have the
        /// [`Edit` permission](https://support.google.com/analytics/answer/2884495) for the Google Analytics account.
        ///
        /// If a `FirebaseProject` already has Google Analytics enabled, and you call `AddGoogleAnalytics` using an
        /// `analyticsPropertyId` that's different from the currently associated property, then the call will fail.
        /// Analytics may have already been enabled in the Firebase console or by specifying `timeZone` and `regionCode`
        /// in the call to [`AddFirebase`](../../v1beta1/projects/addFirebase).</summary>
        public class AddGoogleAnalyticsRequest : FirebaseManagementBaseServiceRequest<Google.Apis.FirebaseManagement.v1beta1.Data.Operation>
        {
            /// <summary>Constructs a new AddGoogleAnalytics request.</summary>
            public AddGoogleAnalyticsRequest(Google.Apis.Services.IClientService service, Google.Apis.FirebaseManagement.v1beta1.Data.AddGoogleAnalyticsRequest body, string parent)
                : base(service)
            {
                Parent = parent;
                Body = body;
                InitParameters();
            }


            /// <summary>The parent `FirebaseProject` to link to an existing Google Analytics account, in the format:
            /// projects/projectId</summary>
            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Parent { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.FirebaseManagement.v1beta1.Data.AddGoogleAnalyticsRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "addGoogleAnalytics"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1beta1/{+parent}:addGoogleAnalytics"; }
            }

            /// <summary>Initializes AddGoogleAnalytics parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "parent", new Google.Apis.Discovery.Parameter
                    {
                        Name = "parent",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+$",
                    });
            }

        }

        /// <summary>Gets the FirebaseProject identified by the specified resource name.</summary>
        /// <param name="name">The fully qualified resource name of the Project, in the format: projects/projectId</param>
        public virtual GetRequest Get(string name)
        {
            return new GetRequest(service, name);
        }

        /// <summary>Gets the FirebaseProject identified by the specified resource name.</summary>
        public class GetRequest : FirebaseManagementBaseServiceRequest<Google.Apis.FirebaseManagement.v1beta1.Data.FirebaseProject>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string name)
                : base(service)
            {
                Name = name;
                InitParameters();
            }


            /// <summary>The fully qualified resource name of the Project, in the format: projects/projectId</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Name { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1beta1/{+name}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+$",
                    });
            }

        }

        /// <summary>Gets the configuration artifact used by servers to simplify initialization.
        ///
        /// Typically, this configuration is used with the Firebase Admin SDK
        /// [initializeApp](https://firebase.google.com/docs/admin/setup#initialize_the_sdk) command.</summary>
        /// <param name="name">The fully qualified resource name of the Project, in the format:
        /// projects/projectId/adminSdkConfig</param>
        public virtual GetAdminSdkConfigRequest GetAdminSdkConfig(string name)
        {
            return new GetAdminSdkConfigRequest(service, name);
        }

        /// <summary>Gets the configuration artifact used by servers to simplify initialization.
        ///
        /// Typically, this configuration is used with the Firebase Admin SDK
        /// [initializeApp](https://firebase.google.com/docs/admin/setup#initialize_the_sdk) command.</summary>
        public class GetAdminSdkConfigRequest : FirebaseManagementBaseServiceRequest<Google.Apis.FirebaseManagement.v1beta1.Data.AdminSdkConfig>
        {
            /// <summary>Constructs a new GetAdminSdkConfig request.</summary>
            public GetAdminSdkConfigRequest(Google.Apis.Services.IClientService service, string name)
                : base(service)
            {
                Name = name;
                InitParameters();
            }


            /// <summary>The fully qualified resource name of the Project, in the format:
            /// projects/projectId/adminSdkConfig</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Name { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "getAdminSdkConfig"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1beta1/{+name}"; }
            }

            /// <summary>Initializes GetAdminSdkConfig parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/adminSdkConfig$",
                    });
            }

        }

        /// <summary>Gets the Google Analytics details currently associated with a FirebaseProject.
        ///
        /// If the `FirebaseProject` is not yet linked to Google Analytics, then the response to `GetAnalyticsDetails`
        /// is NOT_FOUND.</summary>
        /// <param name="name">The fully qualified resource name, in the format:
        /// projects/projectId/analyticsDetails</param>
        public virtual GetAnalyticsDetailsRequest GetAnalyticsDetails(string name)
        {
            return new GetAnalyticsDetailsRequest(service, name);
        }

        /// <summary>Gets the Google Analytics details currently associated with a FirebaseProject.
        ///
        /// If the `FirebaseProject` is not yet linked to Google Analytics, then the response to `GetAnalyticsDetails`
        /// is NOT_FOUND.</summary>
        public class GetAnalyticsDetailsRequest : FirebaseManagementBaseServiceRequest<Google.Apis.FirebaseManagement.v1beta1.Data.AnalyticsDetails>
        {
            /// <summary>Constructs a new GetAnalyticsDetails request.</summary>
            public GetAnalyticsDetailsRequest(Google.Apis.Services.IClientService service, string name)
                : base(service)
            {
                Name = name;
                InitParameters();
            }


            /// <summary>The fully qualified resource name, in the format: projects/projectId/analyticsDetails</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Name { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "getAnalyticsDetails"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1beta1/{+name}"; }
            }

            /// <summary>Initializes GetAnalyticsDetails parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+/analyticsDetails$",
                    });
            }

        }

        /// <summary>Lists each FirebaseProject accessible to the caller.
        ///
        /// The elements are returned in no particular order, but they will be a consistent view of the Projects when
        /// additional requests are made with a `pageToken`.
        ///
        /// This method is eventually consistent with Project mutations, which means newly provisioned Projects and
        /// recent modifications to existing Projects might not be reflected in the set of Projects. The list will
        /// include only ACTIVE Projects.
        ///
        /// Use GetFirebaseProject for consistent reads as well as for additional Project details.</summary>
        public virtual ListRequest List()
        {
            return new ListRequest(service);
        }

        /// <summary>Lists each FirebaseProject accessible to the caller.
        ///
        /// The elements are returned in no particular order, but they will be a consistent view of the Projects when
        /// additional requests are made with a `pageToken`.
        ///
        /// This method is eventually consistent with Project mutations, which means newly provisioned Projects and
        /// recent modifications to existing Projects might not be reflected in the set of Projects. The list will
        /// include only ACTIVE Projects.
        ///
        /// Use GetFirebaseProject for consistent reads as well as for additional Project details.</summary>
        public class ListRequest : FirebaseManagementBaseServiceRequest<Google.Apis.FirebaseManagement.v1beta1.Data.ListFirebaseProjectsResponse>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service)
                : base(service)
            {
                InitParameters();
            }


            /// <summary>Token returned from a previous call to `ListFirebaseProjects` indicating where in the set of
            /// Projects to resume listing.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>The maximum number of Projects to return in the response.
            ///
            /// The server may return fewer than this at its discretion. If no value is specified (or too large a value
            /// is specified), the server will impose its own limit.
            ///
            /// This value cannot be negative.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> PageSize { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1beta1/projects"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageSize", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageSize",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Updates the attributes of the FirebaseProject identified by the specified resource name.
        ///
        /// All [query parameters](#query-parameters) are required.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="name">The fully qualified resource name of the Project, in the format: projects/projectId</param>
        public virtual PatchRequest Patch(Google.Apis.FirebaseManagement.v1beta1.Data.FirebaseProject body, string name)
        {
            return new PatchRequest(service, body, name);
        }

        /// <summary>Updates the attributes of the FirebaseProject identified by the specified resource name.
        ///
        /// All [query parameters](#query-parameters) are required.</summary>
        public class PatchRequest : FirebaseManagementBaseServiceRequest<Google.Apis.FirebaseManagement.v1beta1.Data.FirebaseProject>
        {
            /// <summary>Constructs a new Patch request.</summary>
            public PatchRequest(Google.Apis.Services.IClientService service, Google.Apis.FirebaseManagement.v1beta1.Data.FirebaseProject body, string name)
                : base(service)
            {
                Name = name;
                Body = body;
                InitParameters();
            }


            /// <summary>The fully qualified resource name of the Project, in the format: projects/projectId</summary>
            [Google.Apis.Util.RequestParameterAttribute("name", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Name { get; private set; }

            /// <summary>Specifies which fields to update.
            ///
            /// If this list is empty, then no state will be updated. Note that the fields `name`, `project_id`, and
            /// `project_number` are all immutable.</summary>
            [Google.Apis.Util.RequestParameterAttribute("updateMask", Google.Apis.Util.RequestParameterType.Query)]
            public virtual object UpdateMask { get; set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.FirebaseManagement.v1beta1.Data.FirebaseProject Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "patch"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PATCH"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1beta1/{+name}"; }
            }

            /// <summary>Initializes Patch parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "name", new Google.Apis.Discovery.Parameter
                    {
                        Name = "name",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+$",
                    });
                RequestParameters.Add(
                    "updateMask", new Google.Apis.Discovery.Parameter
                    {
                        Name = "updateMask",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }

        /// <summary>Unlinks the specified `FirebaseProject` from its Google Analytics account.
        ///
        /// This call removes the association of the specified `FirebaseProject` with its current Google Analytics
        /// property. However, this call does not delete the Google Analytics resources, such as the Google Analytics
        /// property or any data streams.
        ///
        /// These resources may be re-associated later to the `FirebaseProject` by calling
        /// [`AddGoogleAnalytics`](../../v1beta1/projects/addGoogleAnalytics) and specifying the same
        /// `analyticsPropertyId`. For Android Apps and iOS Apps, this call re-links data streams with their
        /// corresponding apps. However, for Web Apps, this call provisions a new data stream for each Web App.
        ///
        /// To call `RemoveAnalytics`, a member must be an Owner for the `FirebaseProject`.</summary>
        /// <param name="body">The body of the request.</param>
        /// <param name="parent">The parent `FirebaseProject` to unlink from its Google Analytics account, in the format:
        /// projects/projectId</param>
        public virtual RemoveAnalyticsRequest RemoveAnalytics(Google.Apis.FirebaseManagement.v1beta1.Data.RemoveAnalyticsRequest body, string parent)
        {
            return new RemoveAnalyticsRequest(service, body, parent);
        }

        /// <summary>Unlinks the specified `FirebaseProject` from its Google Analytics account.
        ///
        /// This call removes the association of the specified `FirebaseProject` with its current Google Analytics
        /// property. However, this call does not delete the Google Analytics resources, such as the Google Analytics
        /// property or any data streams.
        ///
        /// These resources may be re-associated later to the `FirebaseProject` by calling
        /// [`AddGoogleAnalytics`](../../v1beta1/projects/addGoogleAnalytics) and specifying the same
        /// `analyticsPropertyId`. For Android Apps and iOS Apps, this call re-links data streams with their
        /// corresponding apps. However, for Web Apps, this call provisions a new data stream for each Web App.
        ///
        /// To call `RemoveAnalytics`, a member must be an Owner for the `FirebaseProject`.</summary>
        public class RemoveAnalyticsRequest : FirebaseManagementBaseServiceRequest<Google.Apis.FirebaseManagement.v1beta1.Data.Empty>
        {
            /// <summary>Constructs a new RemoveAnalytics request.</summary>
            public RemoveAnalyticsRequest(Google.Apis.Services.IClientService service, Google.Apis.FirebaseManagement.v1beta1.Data.RemoveAnalyticsRequest body, string parent)
                : base(service)
            {
                Parent = parent;
                Body = body;
                InitParameters();
            }


            /// <summary>The parent `FirebaseProject` to unlink from its Google Analytics account, in the format:
            /// projects/projectId</summary>
            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Parent { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.FirebaseManagement.v1beta1.Data.RemoveAnalyticsRequest Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "removeAnalytics"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1beta1/{+parent}:removeAnalytics"; }
            }

            /// <summary>Initializes RemoveAnalytics parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "parent", new Google.Apis.Discovery.Parameter
                    {
                        Name = "parent",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+$",
                    });
            }

        }

        /// <summary>A convenience method that lists all available Apps for the specified FirebaseProject.
        ///
        /// Typically, interaction with an App should be done using the platform-specific service, but some tool use-
        /// cases require a summary of all known Apps (such as for App selector interfaces).</summary>
        /// <param name="parent">The parent Project for which to list Apps, in the format: projects/projectId</param>
        public virtual SearchAppsRequest SearchApps(string parent)
        {
            return new SearchAppsRequest(service, parent);
        }

        /// <summary>A convenience method that lists all available Apps for the specified FirebaseProject.
        ///
        /// Typically, interaction with an App should be done using the platform-specific service, but some tool use-
        /// cases require a summary of all known Apps (such as for App selector interfaces).</summary>
        public class SearchAppsRequest : FirebaseManagementBaseServiceRequest<Google.Apis.FirebaseManagement.v1beta1.Data.SearchFirebaseAppsResponse>
        {
            /// <summary>Constructs a new SearchApps request.</summary>
            public SearchAppsRequest(Google.Apis.Services.IClientService service, string parent)
                : base(service)
            {
                Parent = parent;
                InitParameters();
            }


            /// <summary>The parent Project for which to list Apps, in the format: projects/projectId</summary>
            [Google.Apis.Util.RequestParameterAttribute("parent", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Parent { get; private set; }

            /// <summary>Token returned from a previous call to `SearchFirebaseApps` indicating where in the set of Apps
            /// to resume listing.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken { get; set; }

            /// <summary>The maximum number of Apps to return in the response.
            ///
            /// The server may return fewer than this value at its discretion. If no value is specified (or too large a
            /// value is specified), then the server will impose its own limit.
            ///
            /// This value cannot be negative.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageSize", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> PageSize { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "searchApps"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "v1beta1/{+parent}:searchApps"; }
            }

            /// <summary>Initializes SearchApps parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "parent", new Google.Apis.Discovery.Parameter
                    {
                        Name = "parent",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = @"^projects/[^/]+$",
                    });
                RequestParameters.Add(
                    "pageToken", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageToken",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "pageSize", new Google.Apis.Discovery.Parameter
                    {
                        Name = "pageSize",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }
}

namespace Google.Apis.FirebaseManagement.v1beta1.Data
{    

    /// <summary>All fields are required.</summary>
    public class AddFirebaseRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Deprecated. Instead, to set your project's default GCP resource location, call
        /// [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you add Firebase resources to your
        /// project.
        ///
        /// The ID of the project's default GCP resource location. The location must be one of the available [GCP
        /// resource locations](https://firebase.google.com/docs/projects/locations).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locationId")]
        public virtual string LocationId { get; set; } 

        /// <summary>Deprecated. Instead, to link your Project with a Google Analytics account, call
        /// [`AddGoogleAnalytics`](../../v1beta1/projects/addGoogleAnalytics) after you add Firebase resources to your
        /// Project.
        ///
        /// The region code (CLDR) that the account will use for Firebase Analytics data. For example: US, GB, or DE
        ///
        /// In Java, use `com.google.i18n.identifiers.RegionCode`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("regionCode")]
        public virtual string RegionCode { get; set; } 

        /// <summary>Deprecated. Instead, to link your Project with a Google Analytics account, call
        /// [`AddGoogleAnalytics`](../../v1beta1/projects/addGoogleAnalytics) after you add Firebase resources to your
        /// Project.
        ///
        /// The time zone that the account will use for Firebase Analytics data. For example: America/Los_Angeles or
        /// Africa/Abidjan</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("timeZone")]
        public virtual string TimeZone { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class AddGoogleAnalyticsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ID for the existing [Google Analytics account](http://www.google.com/analytics/) that you want
        /// to link with your `FirebaseProject`.
        ///
        /// Specifying this field will provision a new Google Analytics property in your Google Analytics account and
        /// associate the new property with your `FirebaseProject`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("analyticsAccountId")]
        public virtual string AnalyticsAccountId { get; set; } 

        /// <summary>The ID for the existing Google Analytics property that you want to associate with your
        /// `FirebaseProject`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("analyticsPropertyId")]
        public virtual string AnalyticsPropertyId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class AdminSdkConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The default Firebase Realtime Database URL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("databaseURL")]
        public virtual string DatabaseURL { get; set; } 

        /// <summary>The ID of the project's default GCP resource location. The location is one of the available [GCP
        /// resource locations](https://firebase.google.com/docs/projects/locations). This field is omitted if the
        /// default GCP resource location has not been finalized yet. To set your project's default GCP resource
        /// location, call [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you add Firebase
        /// services to your project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locationId")]
        public virtual string LocationId { get; set; } 

        /// <summary>Immutable. The globally unique, user-assigned project ID of the parent Project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projectId")]
        public virtual string ProjectId { get; set; } 

        /// <summary>The default Cloud Storage for Firebase storage bucket name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("storageBucket")]
        public virtual string StorageBucket { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class AnalyticsDetails : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The Analytics Property object associated with the specified `FirebaseProject`.
        ///
        /// This object contains the details of the Google Analytics property associated with the specified
        /// `FirebaseProject`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("analyticsProperty")]
        public virtual AnalyticsProperty AnalyticsProperty { get; set; } 

        /// <summary>For Android Apps and iOS Apps: A map of `app` to `streamId` for each Firebase App in the specified
        /// `FirebaseProject`. Each `app` and `streamId` appears only once.
        ///
        /// For Web Apps: A map of `app` to `streamId` and `measurementId` for each Firebase App in the specified
        /// `FirebaseProject`. Each `app`, `streamId`, and `measurementId` appears only once.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("streamMappings")]
        public virtual System.Collections.Generic.IList<StreamMapping> StreamMappings { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Details of a Google Analytics property</summary>
    public class AnalyticsProperty : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The display name of the Google Analytics property associated with the specified
        /// `FirebaseProject`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        /// <summary>The globally unique, Google-assigned identifier of the Google Analytics property associated with
        /// the specified `FirebaseProject`.
        ///
        /// If you called [`AddGoogleAnalytics`](../../v1beta1/projects/addGoogleAnalytics) to link your
        /// `FirebaseProject` with a Google Analytics account, the value in this `id` field is the same as the ID of the
        /// property either specified or provisioned with that call to `AddGoogleAnalytics`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Details of a Firebase App for Android.</summary>
    public class AndroidApp : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Immutable. The globally unique, Firebase-assigned identifier of the App.
        ///
        /// This identifier should be treated as an opaque token, as the data format is not specified.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("appId")]
        public virtual string AppId { get; set; } 

        /// <summary>The user-assigned display name of the App.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        /// <summary>The fully qualified resource name of the App, in the format:
        /// projects/projectId/androidApps/appId</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The canonical package name of the Android App as would appear in the Google Play Developer
        /// Console.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("packageName")]
        public virtual string PackageName { get; set; } 

        /// <summary>The globally unique, user-assigned ID of the parent Project for the App.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projectId")]
        public virtual string ProjectId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Configuration metadata of a single Firebase App for Android.</summary>
    public class AndroidAppConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The contents of the JSON configuration file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("configFileContents")]
        public virtual string ConfigFileContents { get; set; } 

        /// <summary>The filename that the configuration artifact is typically saved as. For example: `google-
        /// services.json`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("configFilename")]
        public virtual string ConfigFilename { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The default resources associated with a `FirebaseProject`.</summary>
    public class DefaultResources : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The default Firebase Hosting site name, in the format: projectId Though rare, your `projectId`
        /// might already be used as the name for an existing Hosting site in another project (learn more about creating
        /// non-default, [additional sites](https://firebase.google.com/docs/hosting/multisites)). In these cases, your
        /// `projectId` is appended with a hyphen then five alphanumeric characters to create your default Hosting site
        /// name. For example, if your `projectId` is `myproject123`, your default Hosting site name might be:
        /// myproject123-a5c16</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("hostingSite")]
        public virtual string HostingSite { get; set; } 

        /// <summary>The ID of the project's default GCP resource location. The location is one of the available [GCP
        /// resource locations](https://firebase.google.com/docs/projects/locations). This field is omitted if the
        /// default GCP resource location has not been finalized yet. To set your project's default GCP resource
        /// location, call [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you add Firebase
        /// services to your project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locationId")]
        public virtual string LocationId { get; set; } 

        /// <summary>The default Firebase Realtime Database instance name, in the format: projectId Though rare, your
        /// `projectId` might already be used as the name for an existing Realtime Database instance in another project
        /// (learn more about [database sharding](https://firebase.google.com/docs/database/usage/sharding)). In these
        /// cases, your `projectId` is appended with a hyphen then five alphanumeric characters to create your default
        /// Realtime Database instance name. For example, if your `projectId` is `myproject123`, your default database
        /// instance name might be: myproject123-a5c16</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("realtimeDatabaseInstance")]
        public virtual string RealtimeDatabaseInstance { get; set; } 

        /// <summary>The default Cloud Storage for Firebase storage bucket, in the format:
        /// projectId.appspot.com</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("storageBucket")]
        public virtual string StorageBucket { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A
    /// typical example is to use it as the request or the response type of an API method. For instance:
    ///
    /// service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }
    ///
    /// The JSON representation for `Empty` is empty JSON object `{}`.</summary>
    public class Empty : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class FinalizeDefaultLocationRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ID of the default GCP resource location for the Project. The location must be one of the
        /// available [GCP resource locations](https://firebase.google.com/docs/projects/locations).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locationId")]
        public virtual string LocationId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A high-level summary of an App.</summary>
    public class FirebaseAppInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Immutable. The globally unique, Firebase-assigned identifier of the App.
        ///
        /// This identifier should be treated as an opaque token, as the data format is not specified.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("appId")]
        public virtual string AppId { get; set; } 

        /// <summary>The user-assigned display name of the Firebase App.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        /// <summary>The fully qualified resource name of the Firebase App, in the format:
        /// projects/projectId/iosApps/appId or projects/projectId/androidApps/appId </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The platform of the Firebase App.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("platform")]
        public virtual string Platform { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A `FirebaseProject` is the top-level Firebase entity. It is the container for Firebase Apps, Firebase
    /// Hosting sites, storage systems (Firebase Realtime Database, Cloud Firestore, Cloud Storage buckets) and other
    /// Firebase and Google Cloud Platform (GCP) resources.
    ///
    /// You can create a new `FirebaseProject` in the [Firebase console](https://console.firebase.google.com/), or you
    /// can add Firebase resources to an existing [GCP `Project`](https://cloud.google.com/resource-
    /// manager/reference/rest/v1/projects) by calling AddFirebase.
    ///
    /// A `FirebaseProject` is actually also a GCP `Project`, so a `FirebaseProject` uses underlying GCP identifiers
    /// (most importantly, `projectId`) as its own for easy interop with GCP APIs.</summary>
    public class FirebaseProject : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The user-assigned display name of the Project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        /// <summary>The fully qualified resource name of the Project, in the format: projects/projectId</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>Immutable. The globally unique, user-assigned ID of the Project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projectId")]
        public virtual string ProjectId { get; set; } 

        /// <summary>The globally unique, Google-assigned identifier of the Project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projectNumber")]
        public virtual System.Nullable<long> ProjectNumber { get; set; } 

        /// <summary>The default Firebase resources associated with the Project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resources")]
        public virtual DefaultResources Resources { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Details of a Firebase App for iOS.</summary>
    public class IosApp : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Immutable. The globally unique, Firebase-assigned identifier of the App.
        ///
        /// This identifier should be treated as an opaque token, as the data format is not specified.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("appId")]
        public virtual string AppId { get; set; } 

        /// <summary>The automatically generated Apple ID assigned to the App by Apple in the iOS App Store.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("appStoreId")]
        public virtual string AppStoreId { get; set; } 

        /// <summary>The canonical bundle ID of the iOS App as it would appear in the iOS AppStore.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bundleId")]
        public virtual string BundleId { get; set; } 

        /// <summary>The user-assigned display name of the App.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        /// <summary>The fully qualified resource name of the App, in the format:
        /// projects/projectId/iosApps/appId</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The globally unique, user-assigned ID of the parent Project for the App.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projectId")]
        public virtual string ProjectId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Configuration metadata of a single Firebase App for iOS.</summary>
    public class IosAppConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The content of the XML configuration file.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("configFileContents")]
        public virtual string ConfigFileContents { get; set; } 

        /// <summary>The filename that the configuration artifact is typically saved as. For example: `GoogleService-
        /// Info.plist`</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("configFilename")]
        public virtual string ConfigFilename { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class ListAndroidAppsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of each AndroidApp that is in the parent Firebase Project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("apps")]
        public virtual System.Collections.Generic.IList<AndroidApp> Apps { get; set; } 

        /// <summary>If the result list is too large to fit in a single response, then a token is returned. If the
        /// string is empty, then this response is the last page of results.
        ///
        /// This token can be used in a subsequent call to `ListAndroidApps` to find the next group of Apps.
        ///
        /// Page tokens are short-lived and should not be persisted.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class ListAvailableLocationsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>One page of results from a call to `ListAvailableLocations`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locations")]
        public virtual System.Collections.Generic.IList<Location> Locations { get; set; } 

        /// <summary>If the result list is too large to fit in a single response, then a token is returned. If the
        /// string is empty, then this response is the last page of results and all available locations have been
        /// listed.
        ///
        /// This token can be used in a subsequent call to `ListAvailableLocations` to find more locations.
        ///
        /// Page tokens are short-lived and should not be persisted.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class ListAvailableProjectsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If the result list is too large to fit in a single response, then a token is returned. If the
        /// string is empty, then this response is the last page of results.
        ///
        /// This token can be used in a subsequent calls to `ListAvailableProjects` to find the next group of GCP
        /// `Projects`.
        ///
        /// Page tokens are short-lived and should not be persisted.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The list of GCP `Projects` which can have Firebase resources added to them.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projectInfo")]
        public virtual System.Collections.Generic.IList<ProjectInfo> ProjectInfo { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class ListFirebaseProjectsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If the result list is too large to fit in a single response, then a token is returned. If the
        /// string is empty, then this response is the last page of results.
        ///
        /// This token can be used in a subsequent calls to `ListFirebaseProjects` to find the next group of Projects.
        ///
        /// Page tokens are short-lived and should not be persisted.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>One page of the list of Projects that are accessible to the caller.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("results")]
        public virtual System.Collections.Generic.IList<FirebaseProject> Results { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class ListIosAppsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of each IosApp that is in the parent Firebase Project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("apps")]
        public virtual System.Collections.Generic.IList<IosApp> Apps { get; set; } 

        /// <summary>If the result list is too large to fit in a single response, then a token is returned. If the
        /// string is empty, then this response is the last page of results.
        ///
        /// This token can be used in a subsequent call to `ListIosApps` to find the next group of Apps.
        ///
        /// Page tokens are short-lived and should not be persisted.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class ListShaCertificatesResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The list of SHA certificates associated with the App.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("certificates")]
        public virtual System.Collections.Generic.IList<ShaCertificate> Certificates { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class ListWebAppsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>List of each WebApp that is in the parent Firebase Project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("apps")]
        public virtual System.Collections.Generic.IList<WebApp> Apps { get; set; } 

        /// <summary>If the result list is too large to fit in a single response, then a token is returned. If the
        /// string is empty, then this response is the last page of results.
        ///
        /// This token can be used in a subsequent call to `ListWebApps` to find the next group of Apps.
        ///
        /// Page tokens are short-lived and should not be persisted.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A GCP resource location that can be selected for a Project.</summary>
    public class Location : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ID of the GCP resource location. It will be one of the available [GCP resource
        /// locations](https://firebase.google.com/docs/projects/locations#types).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locationId")]
        public virtual string LocationId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>This is proto2's version of MessageSet.</summary>
    public class MessageSet : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>This resource represents a long-running operation that is the result of a network API call.</summary>
    public class Operation : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>If the value is `false`, it means the operation is still in progress. If `true`, the operation is
        /// completed, and either `error` or `response` is available.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("done")]
        public virtual System.Nullable<bool> Done { get; set; } 

        /// <summary>The error result of the operation in case of failure or cancellation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("error")]
        public virtual Status Error { get; set; } 

        /// <summary>Service-specific metadata associated with the operation.  It typically contains progress
        /// information and common metadata such as create time. Some services might not provide such metadata.  Any
        /// method that returns a long-running operation should document the metadata type, if any.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("metadata")]
        public virtual System.Collections.Generic.IDictionary<string,object> Metadata { get; set; } 

        /// <summary>The server-assigned name, which is only unique within the same service that originally returns it.
        /// If you use the default HTTP mapping, the `name` should be a resource name ending with
        /// `operations/{unique_id}`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The normal response of the operation in case of success.  If the original method returns no data on
        /// success, such as `Delete`, the response is `google.protobuf.Empty`.  If the original method is standard
        /// `Get`/`Create`/`Update`, the response should be the resource.  For other methods, the response should have
        /// the type `XxxResponse`, where `Xxx` is the original method name.  For example, if the original method name
        /// is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("response")]
        public virtual System.Collections.Generic.IDictionary<string,object> Response { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A reference to a Google Cloud Platform (GCP) `Project`.</summary>
    public class ProjectInfo : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The user-assigned display name of the GCP `Project`, for example: My App</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        /// <summary>The ID of the project's default GCP resource location. The location is one of the available [GCP
        /// resource locations](https://firebase.google.com/docs/projects/locations). Not all projects will have this
        /// field populated. If it is not populated, it means that the project does not yet have a default GCP resource
        /// location. To set your project's default GCP resource location, call
        /// [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you add Firebase resources to your
        /// project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locationId")]
        public virtual string LocationId { get; set; } 

        /// <summary>The resource name of the GCP `Project` to which Firebase resources can be added, in the format:
        /// projects/projectId</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("project")]
        public virtual string Project { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class RemoveAnalyticsRequest : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Optional. The ID of the Google Analytics property associated with the specified `FirebaseProject`.
        ///
        /// If not set, then the Google Analytics property that is currently associated with the specified
        /// `FirebaseProject` is removed. If set, and the specified `FirebaseProject` is currently associated with a
        /// different Google Analytics property, then the response is a `412 Precondition Failed` error. </summary>
        [Newtonsoft.Json.JsonPropertyAttribute("analyticsPropertyId")]
        public virtual string AnalyticsPropertyId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class SearchFirebaseAppsResponse : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>One page of results from a call to `SearchFirebaseApps`.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("apps")]
        public virtual System.Collections.Generic.IList<FirebaseAppInfo> Apps { get; set; } 

        /// <summary>If the result list is too large to fit in a single response, then a token is returned.
        ///
        /// This token can be used in a subsequent calls to `SearchFirebaseApps` to find the next group of Apps. If the
        /// string is empty, then this response is the last page of results. Page tokens are short-lived and should not
        /// be persisted.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A SHA-1 or SHA-256 certificate associated with the AndroidApp.</summary>
    public class ShaCertificate : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The SHA certificate type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("certType")]
        public virtual string CertType { get; set; } 

        /// <summary>The fully qualified resource name of the `sha-key`, in the format:
        /// projects/projectId/androidApps/appId/sha/shaId</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The certificate hash for the App.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("shaHash")]
        public virtual string ShaHash { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>The `Status` type defines a logical error model that is suitable for different programming
    /// environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status`
    /// message contains three pieces of data: error code, error message, and error details.
    ///
    /// You can find out more about this error model and how to work with it in the [API Design
    /// Guide](https://cloud.google.com/apis/design/errors).</summary>
    public class Status : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The status code, which should be an enum value of google.rpc.Code.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("code")]
        public virtual System.Nullable<int> Code { get; set; } 

        /// <summary>A list of messages that carry the error details.  There is a common set of message types for APIs
        /// to use.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("details")]
        public virtual System.Collections.Generic.IList<System.Collections.Generic.IDictionary<string,object>> Details { get; set; } 

        /// <summary>A developer-facing error message, which should be in English. Any user-facing error message should
        /// be localized and sent in the google.rpc.Status.details field, or localized by the client.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual string Message { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Wire-format for a Status object</summary>
    public class StatusProto : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The canonical error code (see codes.proto) that most closely corresponds to this status. May be
        /// missing.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("canonicalCode")]
        public virtual System.Nullable<int> CanonicalCode { get; set; } 

        /// <summary>Numeric code drawn from the space specified below. Often, this is the canonical error space, and
        /// code is drawn from google3/util/task/codes.proto</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("code")]
        public virtual System.Nullable<int> Code { get; set; } 

        /// <summary>Detail message</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual string Message { get; set; } 

        /// <summary>message_set associates an arbitrary proto message with the status.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messageSet")]
        public virtual MessageSet MessageSet { get; set; } 

        /// <summary>DEPRECATED.
        ///
        /// This field was deprecated in 2011 with cl/20297133.  Java support for the field was moved to a proto1
        /// backward compatibility class in April 2017 with cl/142615857 and cl/154123203.  There was never support for
        /// this field in Go; if set Go will ignore it. C++ stopped setting StatusProto::payload in October 2015 with
        /// cl/106347055, and stopped reading the field in October 2017 with cl/173324114.
        ///
        /// In general, newly written code should use only "message_set". If you need to maintain backward compatibility
        /// with code written before 3/25/2011, do the following:
        ///
        /// - During the transition period, either (1) set both "payload" and "message_set", or (2) write the consumer
        /// of StatusProto so that it can forge a MessageSet object from "payload" if "message_set" is missing. The C++
        /// util::Status implementation does (2).
        ///
        /// - Once all the consumers are converted to accept "message_set", then remove the use of "payload" on the
        /// producer side.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("payload")]
        public virtual TypedMessage Payload { get; set; } 

        /// <summary>The following are usually only present when code != 0 Space to which this status belongs</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("space")]
        public virtual string Space { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>A mapping of a Firebase App to a Google Analytics data stream</summary>
    public class StreamMapping : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The fully qualified resource name of the Firebase App associated with the Google Analytics data
        /// stream, in the format: projects/projectId/androidApps/appId or projects/projectId/iosApps/appId or
        /// projects/projectId/webApps/appId</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("app")]
        public virtual string App { get; set; } 

        /// <summary>Applicable for Firebase Web Apps only. The unique Google-assigned identifier of the Google
        /// Analytics web stream associated with the Firebase Web App. Firebase SDKs use this ID to interact with Google
        /// Analytics APIs.
        ///
        /// Learn more about this ID and Google Analytics web streams in the [Analytics
        /// documentation](https://support.google.com/analytics/topic/9303475).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("measurementId")]
        public virtual string MeasurementId { get; set; } 

        /// <summary>The unique Google-assigned identifier of the Google Analytics data stream associated with the
        /// Firebase App.
        ///
        /// Learn more about Google Analytics data streams in the [Analytics
        /// documentation](https://support.google.com/analytics/answer/9303323).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("streamId")]
        public virtual System.Nullable<long> StreamId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Message that groups a protocol type_id (as defined by MessageSet), with an encoded message of that
    /// type.  Its use is similar to MessageSet, except it represents a single (type, encoded message) instead of a set.
    ///
    /// To fill for known protocol type: MyProtocolMsg proto; TypedMessage typed_msg;
    /// typed_msg.set_type_id(MyProtocolMsg::MESSAGE_TYPE_ID); proto.AppendToCord(typed_msg.mutable_message());
    ///
    /// To fill for unknown protocol type: ProtocolMessage proto; TypedMessage typed_msg;
    /// typed_msg.set_type_id(proto.GetMapper()->type_id()); proto.AppendToCord(typed_msg.mutable_message());</summary>
    public class TypedMessage : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Message bytes.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("message")]
        public virtual string Message { get; set; } 

        /// <summary>Identifier for the type.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("typeId")]
        public virtual System.Nullable<int> TypeId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Details of a Firebase App for the web.</summary>
    public class WebApp : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>Immutable. The globally unique, Firebase-assigned identifier of the App.
        ///
        /// This identifier should be treated as an opaque token, as the data format is not specified.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("appId")]
        public virtual string AppId { get; set; } 

        /// <summary>The fully qualified URLs where the App is hosted.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("appUrls")]
        public virtual System.Collections.Generic.IList<string> AppUrls { get; set; } 

        /// <summary>The user-assigned display name of the App.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        /// <summary>The fully qualified resource name of the App, for example:
        /// projects/projectId/webApps/appId</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        /// <summary>The globally unique, user-assigned ID of the parent Project for the App.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projectId")]
        public virtual string ProjectId { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    /// <summary>Configuration metadata of a single Firebase App for the web.</summary>
    public class WebAppConfig : Google.Apis.Requests.IDirectResponseSchema
    {
        /// <summary>The API key associated with the web App.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("apiKey")]
        public virtual string ApiKey { get; set; } 

        /// <summary>Immutable. The globally unique, Firebase-assigned identifier of the App.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("appId")]
        public virtual string AppId { get; set; } 

        /// <summary>The domain Firebase Auth configures for OAuth redirects, in the format:
        /// projectId.firebaseapp.com</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("authDomain")]
        public virtual string AuthDomain { get; set; } 

        /// <summary>The default Firebase Realtime Database URL.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("databaseURL")]
        public virtual string DatabaseURL { get; set; } 

        /// <summary>The ID of the project's default GCP resource location. The location is one of the available [GCP
        /// resource locations](https://firebase.google.com/docs/projects/locations). This field is omitted if the
        /// default GCP resource location has not been finalized yet. To set your project's default GCP resource
        /// location, call [`FinalizeDefaultLocation`](../projects.defaultLocation/finalize) after you add Firebase
        /// services to your project.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("locationId")]
        public virtual string LocationId { get; set; } 

        /// <summary>The unique Google-assigned identifier of the Google Analytics web stream associated with the
        /// Firebase Web App. Firebase SDKs use this ID to interact with Google Analytics APIs.
        ///
        /// This field is only present if the App is linked to a web stream in a Google Analytics App + Web property.
        /// Learn more about this ID and Google Analytics web streams in the [Analytics
        /// documentation](https://support.google.com/analytics/topic/9303475).
        ///
        /// To generate a `measurementId` and link the Web App with a Google Analytics web stream, call
        /// [`AddGoogleAnalytics`](../../v1beta1/projects/addGoogleAnalytics).</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("measurementId")]
        public virtual string MeasurementId { get; set; } 

        /// <summary>The sender ID for use with Firebase Cloud Messaging.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("messagingSenderId")]
        public virtual string MessagingSenderId { get; set; } 

        /// <summary>Immutable. The globally unique, user-assigned project ID of the parent Project for the
        /// App.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("projectId")]
        public virtual string ProjectId { get; set; } 

        /// <summary>The default Cloud Storage for Firebase storage bucket name.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("storageBucket")]
        public virtual string StorageBucket { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }
}
